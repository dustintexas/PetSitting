@using PetSitting.Model
@model PetSitting.Model.SessionsEntity

@{
    ViewBag.Title = "Edit";
}


<div class="panel">
    <div class="panel-heading"><h3>Edit Session</h3></div>
    <div class="panel-body">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.SessionID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SessionID, "", new { @class = "text-danger" })
                </div>
            </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SitterName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.SitterName)
                            @Html.EditorFor(model => model.SitterID, new { htmlAttributes = new { @style = "display: none;", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SitterID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.OwnerName)
                            @Html.EditorFor(model => model.OwnerID, new { htmlAttributes = new { @style = "display: none;", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
                        </div>
                    </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Status, ViewData["StatusList"] as List<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        @{ if ((string)Session["AUTHRole"] == "Admin")
            {
                <div>@Html.ActionLink("Back to List", "ListAll")</div>
            }

            }

        </div>
    </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
