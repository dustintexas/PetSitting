@model PetSitting.Model.SessionsEntity

@{
    ViewBag.Title = "Create";
}

<div class="panel">
    <div class="panel-heading"><h3>Create Session</h3></div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.SitterID, htmlAttributes: new { @style = "display: none;", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SitterID, new { htmlAttributes = new { @style = "display: none;", @class = "form-control", @Value = Session["ChosenSitterID"] } })
                        @Html.ValidationMessageFor(model => model.SitterID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerID, htmlAttributes: new { @style = "display: none;", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{ if ((string)Session["AUTHRole"] == "Owner")
                            {
                                @Html.EditorFor(model => model.OwnerID, new { htmlAttributes = new { @style = "display: none;", @class = "form-control", @Value = Session["AUTHOwnerID"] } });
                           } else if ((string)Session["AUTHRole"] == "Admin") {
                                 @Html.EditorFor(model => model.OwnerID, new { htmlAttributes = new { @style = "display: none;", @class = "form-control", @Value = Session["ChosenOwnerID"] } });
                           }
                            
                         }

                            @Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
                        </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @style = "display: none;", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @style = "display: none;", @class = "form-control", @Value = "Requested" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                    </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fee, htmlAttributes: new { @style = "display: none;", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @style = "display: none;", @class = "form-control", @Value = Session["ChosenSitterFee"] } })
                        @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Home", "Index", "Home")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
